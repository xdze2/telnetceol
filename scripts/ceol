#!/usr/bin/python

import click
import time


from rich import align, print, style
from rich.panel import Panel, Text


from telnetceol.utils import TelnetClient, format_response


@click.group()
@click.option('--ip', default="192.168.0.11", help='IP address', show_default=True)
@click.pass_context
def cli(ctx, ip):
    ctx.ensure_object(dict)
    ctx.obj['ip'] = ip
    ctx.obj['telnet_client'] = TelnetClient(ip)


# @click.group()
# @click.option('--debug/--no-debug', default=False)
# def cli(debug=False):
#     click.echo(f"Debug mode is {'on' if debug else 'off'}")


@cli.command(short_help='send raw command')
@click.argument('command', required=True, type=click.STRING)
@click.pass_context
def send(ctx, command):
    """Send over Telnet the given command and print response."""
    response = ctx.obj['telnet_client'].request(command)
    click.echo(format_response(response))
    click.echo('')


@cli.command(short_help='toggle mute')
@click.pass_context
def mute(ctx):
    """Toggle mute on/off."""
    actual_state = ctx.obj['telnet_client'].request("MU?")
    actual_state = format_response(actual_state)
    if "OFF" in actual_state:
        response = ctx.obj['telnet_client'].request("MUON")
    else:
        response = ctx.obj['telnet_client'].request("MUOFF")
    click.echo(actual_state + ' > ' + format_response(response))
    click.echo('')


@cli.command(short_help='display clock')
@click.pass_context
def clock(ctx):
    """Display clock."""
    response = ctx.obj['telnet_client'].request("CLK")
    clock_time = format_response(response).replace('CLK', '')
    clock_time = f'{clock_time[0:2]}:{clock_time[2:]}'
    clk_panel = Panel(
        Text(clock_time, justify="center", style='bold'),
        padding=(0, 3),
        expand=False,
    )

    print(clk_panel)
    click.echo('')


@cli.command(short_help='Once timer clock')
@click.pass_context
def once(ctx):
    """Display clock."""
    response = ctx.obj['telnet_client'].request("TF?")
    clock_time = format_response(response).replace('CLK', '')
    clock_time = f'{clock_time[0:2]}:{clock_time[2:]}'
    clk_panel = Panel(
        Text(clock_time, justify="center", style='bold'),
        padding=(0, 3),
        expand=False,
    )

    print(clk_panel)
    click.echo('')

from telnetceol.livescreen import LiveScreen

@cli.command(short_help='Show live screen')
@click.pass_context
def show(ctx):
    """Show live screen info."""
    live = LiveScreen(telnet_client=ctx.obj['telnet_client'])
    live.run()



# @cli.command()
# def standby(ip="192.168.0.11"):
#     telnet = TelnetClient(ip)
#     response = telnet.request("PWSTANDBY")
#     print(format_response(response))


if __name__ == '__main__':
    # click.echo('main')
    cli(obj={})